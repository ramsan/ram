.commentsList.clearfix{:class => "affect_#{user_comment.id}"}
  .imageComment
    - if user_comment.has_image?
      %a.media{:href => "#{user_comment.this_url(:large)}"}
        %img{:src => user_comment.this_url(:small), :title => 'View larger', :alt => 'View larger'}
    - else
      &nbsp;

  -#.userCommentDetails
    .userData
      .img_profile_memory_cont
        .img_profile_memory
          = image_tag  user_comment.user.my_profile_image
      .data_profile_user_memory2
        .userName
          -if @memory.is_anonymous
            Anonymous
          - else
            = link_to  user_comment.user.name, users_profile_path(user_comment.user)
  .userCommented
    .user_img
      .img_profile_memory
        = link_to  image_tag(user_comment.user.my_profile_image), users_profile_path(user_comment.user)
    - unless user_comment.caption.blank?
      .userCommentedOut
        = "<a href='#{users_profile_path(user_comment.user)}'>#{user_comment.user.name}</a> ".html_safe + "said: " + user_comment.caption
        &nbsp;
        = "Posted: " + user_comment.created_at.to_formatted_s(:long_custom)
      %div{:id => "userCommentedIn_#{user_comment.id}", :style => "display:none", :class => "commentform"}
        - if current_user
          -if current_user.id == user_comment.user_id
            .user_row2
              .memory-preview-data
                #memoryDetails
                  #newMemoryComment
                    .comment
                      .right
                        #memories_form
                          = form_for user_comment, :remote => true, :html => {:multipart => true, :id => "edit_image"} do |f|
                            / %h2 Add comment Add Comment and/or a Photo if you want!
                            %input{:type => 'hidden', :name => :as_comment, :value => true}
                            %input{:type => 'hidden', :name => 'images[user_id]', :value => current_user.id.to_s}
                            %input{:type => 'hidden', :name => 'images[memory_id]', :value => user_comment.memory_id.to_s}
                            %input.edit_google_page_url{:type => 'hidden', :name => 'images[google_page_url]', :value => user_comment.google_page_url.to_s}
                            %input.edit_google_thumb{:type => 'hidden', :name => 'images[google_thumb]', :value => user_comment.google_thumb.to_s}
                            %input.edit_google_main{:type => 'hidden', :name => 'images[google_main]', :value => user_comment.google_main.to_s}
                            %input.external_url{:type => 'hidden', :name => 'images[external_url]', :value => user_comment.external_url.to_s}

                            .commentDetails
                              = image_tag (current_user.my_profile_image)
                              %textarea#newUserComment{:name => 'images[caption]', :title => 'Photo caption', :spellcheck => true, :rows => 1, :cols => 64, :onkeyup => "autoresize('userCommentedIn_#{user_comment.id}')", :onfocus => "autoresize('userCommentedIn_#{user_comment.id}')", :onblur => "autoresize('userCommentedIn_#{user_comment.id}')", :placeholder => "Write your comment here"}
                                = user_comment.caption.to_s
                            .left
                              #edit_comment_img
                                - if user_comment.has_image?
                                  %span.remove{:title => 'Remove image', :onclick => "edit_remove_image()"}X
                                  %img{:src => user_comment.this_url(:small)}
                            .spacer
                            .newCommentButtons
                              .fileinputs
                                %input#my_comment_image_upload{:type => 'file', :name => 'images[][image]', :class => "myFile"}
                                .fakefile
                                  %input.upload_btn
                              .google_search
                                %a#edit_search_link{:href => '#', :style => 'margin:0', :onclick => 'edit_imagebysearch()'} Search for an image
                                -#%a#external_link{:href => '#'} Image URL
                                = f.submit 'Post', :id => "postNewComment"
  .delete_position
    - if current_user
      -if current_user.id == user_comment.user_id
        %span{:class => 'edit', :onclick => "edit_commentjs('userCommentedIn_#{user_comment.id}')"}
          Edit
        %a{:href => images_delete_by_images_memory_id_path(:memory_id => user_comment.memory_id, :id => user_comment.id ), :confirm => 'Are you sure?', 'data-remote' => true, :class => 'remove'}x